name: Dynamic Cypress Tests with Allure

on:
  workflow_dispatch:

jobs:
  prepare-tests:
    runs-on: ubuntu-latest
    outputs:
      specs1: ${{ steps.split.outputs.specs1 }}
      specs2: ${{ steps.split.outputs.specs2 }}
    steps:
      - uses: actions/checkout@v4

      - name: Find all spec files
        id: find
        run: |
          FILES=$(find cypress/e2e/prod -type f -name "*.spec.cy.ts" | sort)
          echo "Found spec files:"
          echo "$FILES"
          echo "specs=$FILES" >> $GITHUB_OUTPUT

      - name: Split spec files into 2 groups
        id: split
        run: |
          FILES=($(find cypress/e2e/prod -type f -name "*.spec.cy.ts" | sort))
          MID=$(( (${#FILES[@]} + 1) / 2 ))

          FIRST_HALF=${FILES[@]:0:$MID}
          SECOND_HALF=${FILES[@]:$MID}

          SPECS1=$(printf "%s," ${FIRST_HALF[@]})
          SPECS2=$(printf "%s," ${SECOND_HALF[@]})

          SPECS1=${SPECS1%,}
          SPECS2=${SPECS2%,}

          echo "specs1=$SPECS1" >> $GITHUB_OUTPUT
          echo "specs2=$SPECS2" >> $GITHUB_OUTPUT

  run-tests-1:
    needs: prepare-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci

      - name: Run Cypress Tests (Batch 1)
        run: |
          IFS=',' read -ra FILES <<< "${{ needs.prepare-tests.outputs.specs1 }}"
          for spec in "${FILES[@]}"; do
            echo "Running: $spec"
            npx cypress run --env version=prod,allure=true --spec "$spec"
          done

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-job1
          path: allure-results

  run-tests-2:
    needs: prepare-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci

      - name: Run Cypress Tests (Batch 2)
        run: |
          IFS=',' read -ra FILES <<< "${{ needs.prepare-tests.outputs.specs2 }}"
          for spec in "${FILES[@]}"; do
            echo "Running: $spec"
            npx cypress run --env version=prod,allure=true --spec "$spec"
          done

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-job2
          path: allure-results

  merge-allure-reports:
    needs: [run-tests-1, run-tests-2]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Merge Allure Results
        run: |
          mkdir -p merged
          cp -r artifacts/*/allure-results/* merged/ || true
          npm install -g allure-commandline
          allure generate merged --clean -o allure-report

      - name: Upload Final Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: final-allure-report
          path: allure-report
